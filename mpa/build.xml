<?xml version="1.0" encoding="UTF-8"?>
<project name="mpa" basedir="." default="all">
   <!-- import antlr-contrib -->
   <taskdef resource="net/sf/antcontrib/antlib.xml">
      <classpath>
         <pathelement location="ant-contrib/ant-contrib-dev.jar"/>
      </classpath>
   </taskdef>

   <!-- import and configure one-jar -->
   <property name="one-jar.dir" location="one-jar"/>
   <import file="${one-jar.dir}/build.onejar.xml"/>
	<property name="temp.dir" value="temp" />	
   <path id="libraries">
      <fileset dir="lib" includes="**/*.jar"/>
   </path>
   <property name="outputJar" value="out/mpa.jar"/>


   <!-- antlr4 build macro for lexers -->
   <macrodef name="antlr4lexer">
      <attribute name="grammar.packagedir"/>
      <attribute name="grammar.name"/>
      <attribute name="antlrjar" default="lib/antlr/antlr-4.4-complete.jar"/>
      <sequential>
         <outofdate>
            <sourcefiles>
               <fileset dir="src/@{grammar.packagedir}" includes="@{grammar.name}.g4"/>
            </sourcefiles>
            <targetfiles>
               <fileset dir="src/@{grammar.packagedir}" includes="@{grammar.name}.java"/>
               <fileset dir="src/@{grammar.packagedir}" includes="@{grammar.name}.tokens"/>
            </targetfiles>
            <sequential>
               <java fork="true" failonerror="true" jar="@{antlrjar}">
                  <arg path="src/@{grammar.packagedir}/@{grammar.name}.g4"/>
                  <arg value="-o"/>
                  <arg path="src/@{grammar.packagedir}"/>
                  <arg value="-encoding"/>
                  <arg value="UTF-8"/>
                  <arg value="-Werror"/>
               </java>
            </sequential>
         </outofdate>
      </sequential>
   </macrodef> 

   <!-- antlr4 build macro for parsers -->
   <macrodef name="antlr4parser">
      <attribute name="grammar.packagedir"/>
      <attribute name="grammar.name"/>
      <attribute name="antlrjar" default="lib/antlr/antlr-4.4-complete.jar"/>
      <element name="dependencies"/>
      <sequential>
         <outofdate>
            <sourcefiles>
               <dependencies/>
            </sourcefiles>
            <targetfiles>
               <fileset dir="src/@{grammar.packagedir}" includes="@{grammar.name}.java"/>
               <fileset dir="src/@{grammar.packagedir}" includes="@{grammar.name}Listener.java"/>
               <fileset dir="src/@{grammar.packagedir}" includes="@{grammar.name}Visitor.java"/>
               <fileset dir="src/@{grammar.packagedir}" includes="@{grammar.name}BaseListener.java"/>
               <fileset dir="src/@{grammar.packagedir}" includes="@{grammar.name}BaseVisitor.java"/> 
               <fileset dir="src/@{grammar.packagedir}" includes="@{grammar.name}.tokens"/>
            </targetfiles>
            <sequential>
               <java fork="true" failonerror="true" jar="@{antlrjar}">
                  <arg path="src/@{grammar.packagedir}/@{grammar.name}.g4"/>
                  <arg value="-o"/>
                  <arg path="src/@{grammar.packagedir}"/>
                  <arg value="-lib"/>
                  <arg path="src/@{grammar.packagedir}"/>
                  <arg value="-encoding"/>
                  <arg value="UTF-8"/>
                  <redirector>
                     <outputfilterchain>
                           <linecontainsregexp negate="true">
                              <regexp pattern="warning\(109\):"/>
                           </linecontainsregexp>
                     </outputfilterchain>
                  </redirector>
               </java>
            </sequential>
         </outofdate>
      </sequential>
   </macrodef> 

   <target name="all" depends="jar" description="Build everything"/>

   <target name="grammarclean" description="Delete generated antlr files">
      <delete>
         <fileset dir="src" includes="**/*.tokens"/>
         <fileset dir="src" includes="mpa/grammar/cisco/Cisco*.java"/>
         <fileset dir="src" includes="mpa/grammar/arista/Arista*.java"/>
         <fileset dir="src" includes="mpa/grammar/quanta/Quanta*.java"/>
         <fileset dir="src" includes="mpa/grammar/flatjuniper/FlatJuniper*.java"/>
         <fileset dir="src" includes="mpa/grammar/juniper/Juniper*.java"/>
         <fileset dir="src" includes="mpa/grammar/f5/F5*.java"/>
         <fileset dir="src" includes="mpa/grammar/citrix/Citrix*.java"/>
         <fileset dir="src" includes="mpa/grammar/juniperfirewall/JuniperFirewall*.java"/>
      </delete>
   </target>


   <!-- Check to see if anything that would be packaged for distribution has changed -->
   <target name="checkJarBuild" depends="compile">
      <uptodate property="jarBuild.notRequired" targetfile="${outputJar}">
         <srcfiles dir="bin" includes="**/*"/>
         <srcfiles dir="lib" includes="**/*"/>
      </uptodate>
   </target>


   <target name="clean" depends="compileclean, grammarclean" description="Delete all intermediate files"/>

   <target name="compile" depends="grammar4parsers"
    description=
     "Compile all Java files (including those generated by antlr)">
      <mkdir dir="bin"/>
      <javac destdir="bin" includes="**/*.java" debug="true" includeantruntime="false" source="1.7" target="1.7">
      	 <src path="src" />
         <classpath refid="libraries" />
     <!--    <classpath refid="one-jar.libraries"/> -->
         <classpath path="${one-jar.ant.jar}"/>
      </javac>
	</target>

	<target name="compileclean" description="Delete all compiled Java classes and copied logic">
		<delete dir="bin" />
	</target>


   <target name="distclean" depends="clean"
    description=
     "Delete everything generated by build process, as well as logic generated by Batfish">
      <delete dir="out"/>
	</target>


   <target name="grammar4lexers"
     description="Compile antlr4 lexer grammars">
      <parallel>
         <antlr4lexer grammar.name="CiscoGrammarCommonLexer" grammar.packagedir="mpa/grammar/cisco"/>
         <antlr4lexer grammar.name="AristaLexer" grammar.packagedir="mpa/grammar/arista"/>
         <antlr4lexer grammar.name="QuantaLexer" grammar.packagedir="mpa/grammar/quanta"/>
         <antlr4lexer grammar.name="JuniperLexer" grammar.packagedir="mpa/grammar/juniper"/>
         <antlr4lexer grammar.name="FlatJuniperLexer" grammar.packagedir="mpa/grammar/flatjuniper"/>
         <antlr4lexer grammar.name="F5Lexer" grammar.packagedir="mpa/grammar/f5"/>
         <antlr4lexer grammar.name="CitrixLexer" grammar.packagedir="mpa/grammar/citrix"/>
		 <antlr4lexer grammar.name="JuniperFirewallLexer" grammar.packagedir="mpa/grammar/juniperfirewall"/>
      </parallel>
   </target>

   <target name="grammar4parsers" depends="grammar4lexers"
     description="Compile antlr4 parser grammars">
      <parallel>
         <antlr4parser grammar.name="CiscoGrammar" grammar.packagedir="mpa/grammar/cisco">
            <dependencies>
               <fileset dir="src/mpa/grammar/cisco" includes="CiscoGrammar.g4"/>
               <fileset dir="src/mpa/grammar/cisco" includes="CiscoGrammarCommonLexer.g4"/>
               <fileset dir="src/mpa/grammar/cisco" includes="CiscoGrammarCommonLexer.tokens"/>
               <fileset dir="src/mpa/grammar/cisco" includes="CiscoGrammarCommonParser.g4"/>
               <fileset dir="src/mpa/grammar/cisco" includes="CiscoGrammar_acl.g4"/>
               <fileset dir="src/mpa/grammar/cisco" includes="CiscoGrammar_bgp.g4"/>
               <fileset dir="src/mpa/grammar/cisco" includes="CiscoGrammar_interface.g4"/>
               <fileset dir="src/mpa/grammar/cisco" includes="CiscoGrammar_ospf.g4"/>
               <fileset dir="src/mpa/grammar/cisco" includes="CiscoGrammar_rip.g4"/>
               <fileset dir="src/mpa/grammar/cisco" includes="CiscoGrammar_routemap.g4"/>
            </dependencies>
         </antlr4parser> 
         <antlr4parser grammar.name="AristaGrammar" grammar.packagedir="mpa/grammar/arista">
            <dependencies>
               <fileset dir="src/mpa/grammar/arista" includes="AristaLexer.g4"/>
               <fileset dir="src/mpa/grammar/arista" includes="AristaGrammar.g4"/>
               <fileset dir="src/mpa/grammar/arista" includes="AristaGrammar_acl.g4"/>
               <fileset dir="src/mpa/grammar/arista" includes="AristaGrammar_interface.g4"/>
               <fileset dir="src/mpa/grammar/arista" includes="AristaLexer.tokens"/>
               <fileset dir="src/mpa/grammar/arista" includes="AristaGrammar.tokens"/>
            </dependencies>
         </antlr4parser> 
         <antlr4parser grammar.name="QuantaGrammar" grammar.packagedir="mpa/grammar/quanta">
            <dependencies>
               <fileset dir="src/mpa/grammar/quanta" includes="QuantaLexer.g4"/>
               <fileset dir="src/mpa/grammar/quanta" includes="QuantaGrammar.g4"/>
               <fileset dir="src/mpa/grammar/quanta" includes="QuantaGrammar_acl.g4"/>
               <fileset dir="src/mpa/grammar/quanta" includes="QuantaGrammar_interface.g4"/>
               <fileset dir="src/mpa/grammar/quanta" includes="QuantaLexer.tokens"/>
               <fileset dir="src/mpa/grammar/quanta" includes="QuantaGrammar.tokens"/>
            </dependencies>
         </antlr4parser> 
         <antlr4parser grammar.name="JuniperParser" grammar.packagedir="mpa/grammar/juniper">
            <dependencies>
               <fileset dir="src/mpa/grammar/juniper" includes="JuniperLexer.g4"/>
               <fileset dir="src/mpa/grammar/juniper" includes="JuniperLexer.tokens"/>
               <fileset dir="src/mpa/grammar/juniper" includes="JuniperParser.g4"/>
               <fileset dir="src/mpa/grammar/juniper" includes="JuniperParser.tokens"/>
            </dependencies>
         </antlr4parser> 
         <antlr4parser grammar.name="FlatJuniperParser" grammar.packagedir="mpa/grammar/flatjuniper">
            <dependencies>
               <fileset dir="src/mpa/grammar/flatjuniper" includes="FlatJuniperParser.g4"/>
               <fileset dir="src/mpa/grammar/flatjuniper" includes="FlatJuniperLexer.g4"/>
               <fileset dir="src/mpa/grammar/flatjuniper" includes="FlatJuniperLexer.tokens"/>
               <fileset dir="src/mpa/grammar/flatjuniper" includes="FlatJuniperParser.tokens"/>
               <fileset dir="src/mpa/grammar/flatjuniper" includes="FlatJuniper_bgp.g4"/>
               <fileset dir="src/mpa/grammar/flatjuniper" includes="FlatJuniper_common.g4"/>
               <fileset dir="src/mpa/grammar/flatjuniper" includes="FlatJuniper_firewall.g4"/>
               <fileset dir="src/mpa/grammar/flatjuniper" includes="FlatJuniper_interfaces.g4"/>
               <fileset dir="src/mpa/grammar/flatjuniper" includes="FlatJuniper_isis.g4"/>
               <fileset dir="src/mpa/grammar/flatjuniper" includes="FlatJuniper_mpls.g4"/>
               <fileset dir="src/mpa/grammar/flatjuniper" includes="FlatJuniper_ospf.g4"/>
               <fileset dir="src/mpa/grammar/flatjuniper" includes="FlatJuniper_policy_options.g4"/>
               <fileset dir="src/mpa/grammar/flatjuniper" includes="FlatJuniper_protocols.g4"/>
               <fileset dir="src/mpa/grammar/flatjuniper" includes="FlatJuniper_routing_instances.g4"/>
            </dependencies>
         </antlr4parser>
         <antlr4parser grammar.name="F5Parser" grammar.packagedir="mpa/grammar/f5">
            <dependencies>
               <fileset dir="src/mpa/grammar/f5" includes="F5Parser.g4"/>
               <fileset dir="src/mpa/grammar/f5" includes="F5Lexer.g4"/>
               <fileset dir="src/mpa/grammar/f5" includes="F5Lexer.tokens"/>
               <fileset dir="src/mpa/grammar/f5" includes="F5Parser.tokens"/>
               <fileset dir="src/mpa/grammar/f5" includes="F5Parser_ltm.g4"/>
               <fileset dir="src/mpa/grammar/f5" includes="F5Parser_monitor.g4"/>
               <fileset dir="src/mpa/grammar/f5" includes="F5Parser_pool.g4"/>
               <fileset dir="src/mpa/grammar/f5" includes="F5Parser_profile.g4"/>
               <fileset dir="src/mpa/grammar/f5" includes="F5Parser_virtual.g4"/>
            </dependencies>
         </antlr4parser>
         <antlr4parser grammar.name="CitrixParser" grammar.packagedir="mpa/grammar/citrix">
            <dependencies>
               <fileset dir="src/mpa/grammar/citrix" includes="CitrixLexer.g4"/>
               <fileset dir="src/mpa/grammar/citrix" includes="CitrixParser.g4"/>
               <fileset dir="src/mpa/grammar/citrix" includes="CitrixLexer.tokens"/>
               <fileset dir="src/mpa/grammar/citrix" includes="CitrixParser.tokens"/>
            </dependencies>
         </antlr4parser>
         <antlr4parser grammar.name="JuniperFirewallGrammar" grammar.packagedir="mpa/grammar/juniperfirewall">
            <dependencies>
               <fileset dir="src/mpa/grammar/juniperfirewall" includes="JuniperFirewallLexer.g4"/>
               <fileset dir="src/mpa/grammar/juniperfirewall" includes="JuniperFirewallLexer.tokens"/>
               <fileset dir="src/mpa/grammar/juniperfirewall" includes="JuniperFirewallGrammar.g4"/>
               <fileset dir="src/mpa/grammar/juniperfirewall" includes="JuniperFirewallGrammar.tokens"/>
            </dependencies>
         </antlr4parser>
      </parallel>
   </target>

   <target name="jar" depends="checkJarBuild" unless="jarBuild.notRequired"
     description="Produce distribution all-in-one jar">
      <mkdir dir="out"/>
      <one-jar destfile="${outputJar}">
         <manifest>
            <attribute name="Main-Class" value="mpa.main.Boot"/>
            <attribute name="One-Jar-Main-Class" value="mpa.main.Driver"/>
            <attribute name="One-Jar-URL-Factory" value="com.simontuffs.onejar.JarClassLoader$OneJarURLFactory"/>
         </manifest>
         <main>
            <fileset dir="bin"/>
         </main>
         <lib>
            <fileset dir="lib" includes="**/*" />
         </lib>
		</one-jar>
		<delete dir="${temp.dir}" />
	</target>




</project>
